* >Natural Source Header 000000
* :Mode S
* :CP
* :LineIncrement 10
* <Natural Source Header
*** MODULE : HASARD   - LIBRAIRIE : H18005LI - EDITE LE  22/11/95 ***
* ---------------------------------------------------------------
* SOUS PROGRAMME GENERANT DES NOMBRES ALEATOIRES
*
*    EN INPUT :
*    - INF = BORNE INFERIEURE
*    - SUP = BORNE SUPERIEURE
*    - CTR = NOMBRE A GENERER
*    - CAR = SI 'D' --> ALEATOIRE AVEC DOUBLE ( D COMME DOUBLE )
*               'S' --> ALEATOIRE SANS DOUBLE ( S COMME SIMPLE )
*
*    EN OUTPUT :
*    - OUT = RESULTATS
*    - COD = SI '0' --> OK
*               '1' --> ERREUR BORNE INF > SUP
*               '2' --> ERREUR CTR = 0
*               '3' --> ERREUR CAR <> 'D' ET 'S'
* ---------------------------------------------------------------
*
DEFINE DATA
PARAMETER USING HASARD-P
*
LOCAL
1 £I  (N2)
1 £J  (N2)
1 £K  (N2)
1 £F1 (F8)
1 £F2 (F8)
END-DEFINE
*
* -----------------------------------------
*
RESET ££OUT(*) ££COD
*
DECIDE FOR FIRST CONDITION
  WHEN ££INF GT ££SUP
    MOVE 1   TO ££COD
*
  WHEN ££CTR EQ 0
    MOVE 2   TO ££COD
*
  WHEN ££CTR GT 50
    MOVE 3   TO ££COD
*
  WHEN NOT ( ££CAR EQ 'D' OR EQ 'S' )
    MOVE 4   TO ££COD
*
  WHEN NONE
    COMPUTE £F1 = LOG(*TIMN)
*
    FOR £I 1 TO ££CTR
      COMPUTE £F1 = FRAC(£F1)
      COMPUTE £F2 = £F1 * 10**8
      COMPUTE £F2 = FRAC(£F2)
      COMPUTE £F1 = EXP(£F1)
      COMPUTE £F2 = £F2 * ( ££SUP - ££INF + 1 )
      COMPUTE £F2 = £F2 + ££INF
      MOVE £F2 TO ££OUT(£I)
*
      IF ££CAR EQ 'S'
        SUBTRACT 1 FROM £I GIVING £K
*
        FOR £J = 1 TO £K
          IF ££OUT(£J) EQ ££OUT(£I)
            SUBTRACT 1 FROM £I
            ESCAPE BOTTOM
          END-IF
        END-FOR
      END-IF
    END-FOR
END-DECIDE
*
* -----------------------------------------
*
END
*
